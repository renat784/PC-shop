// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PC_shop.Data;

namespace PC_shop.Migrations
{
    [DbContext(typeof(PC_shopContext))]
    [Migration("20201101134905_seed_mb")]
    partial class seed_mb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PC_shop.Models.Cpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CountOfCores")
                        .HasColumnType("int");

                    b.Property<int>("CountOfThreads")
                        .HasColumnType("int");

                    b.Property<string>("Graphics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TechProcess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CpuList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CountOfCores = 10,
                            CountOfThreads = 20,
                            Graphics = "Intel UHD Graphics 630",
                            Images = "intel_bx8070110900k_images_18036977635.jpg; intel_bx8070110900k_images_18036977713.jpg; intel_bx8070110900k_images_18036977791.jpg",
                            Make = "Intel",
                            Name = "intel x10",
                            Price = 500,
                            TechProcess = 14
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CountOfCores = 8,
                            CountOfThreads = 16,
                            Graphics = "Intel UHD Graphics 630",
                            Images = "intel_bx8070110700k_images_18036978979.jpg; intel_bx8070110700k_images_18036979117.jpg; intel_bx8070110700k_images_18036979195.jpg",
                            Make = "Intel",
                            Name = "intel x8",
                            Price = 1200,
                            TechProcess = 14
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CountOfCores = 6,
                            CountOfThreads = 6,
                            Graphics = "Нет",
                            Images = "intel_core_i5_9400f_bx80684i59400f_images_10930275039.jpg; intel_core_i5_9400f_bx80684i59400f_images_10930275525.jpg; intel_core_i5_9400f_bx80684i59400f_images_10930277979.jpg",
                            Make = "Intel",
                            Name = "intel x6",
                            Price = 900,
                            TechProcess = 14
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CountOfCores = 8,
                            CountOfThreads = 16,
                            Graphics = "Нет",
                            Images = "copy_amd_ryzen_7_3800x_5d175dc657832_images_12764982409.jpg; copy_amd_ryzen_7_3800x_5d175dc657832_images_12764983147.jpg; copy_amd_ryzen_7_3800x_5d175dc657832_images_12764983759.jpg",
                            Make = "AMD",
                            Name = "AMD x8",
                            Price = 400,
                            TechProcess = 7
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CountOfCores = 6,
                            CountOfThreads = 12,
                            Graphics = "Нет",
                            Images = "copy_amd_ryzen_5_3600x_5f100787c16dd_images_19179571645.jpg; copy_amd_ryzen_5_3600x_5f100787c16dd_images_19179572233.jpg; copy_amd_ryzen_5_3600x_5f100787c16dd_images_19179572899.jpg",
                            Make = "AMD",
                            Name = "AMD x6",
                            Price = 1500,
                            TechProcess = 7
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CountOfCores = 4,
                            CountOfThreads = 8,
                            Graphics = "Нет",
                            Images = "amd_ryzen_3_3100_images_18001372357.jpg; amd_ryzen_3_3100_images_18001299481.jpg; amd_ryzen_3_3100_images_18001298797.jpg; amd_ryzen_3_3100_images_18001298413.jpg; amd_ryzen_3_3100_images_18001297993.jpg; amd_ryzen_3_3100_images_18001297027.jpg",
                            Make = "AMD",
                            Name = "AMD x4",
                            Price = 1600,
                            TechProcess = 7
                        });
                });

            modelBuilder.Entity("PC_shop.Models.Hdd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ReadSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WriteSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HddList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 500,
                            CategoryId = 2,
                            Images = "230651827_images_19012954021.jpg; 230651827_images_19012954345.jpg",
                            Make = "Western Digital",
                            Name = "Ultrastar DC HC520 500 Gb",
                            Price = 300,
                            ReadSpeed = 550,
                            WriteSpeed = 450
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1000,
                            CategoryId = 2,
                            Images = "western_digital_wd10ezex_images_7029060.jpg",
                            Make = "Western Digital",
                            Name = "Ultrastar DC HC520 1 Tb",
                            Price = 600,
                            ReadSpeed = 350,
                            WriteSpeed = 450
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 960,
                            CategoryId = 2,
                            Images = "silicon_power_armor_a60_1tb_sp010tbphda60s3k_images_117061555.jpg; silicon_power_armor_a60_1tb_sp010tbphda60s3k_images_117061620.jpg",
                            Make = "Silicon Power",
                            Name = "Armor A60 1 Tb",
                            Price = 250,
                            ReadSpeed = 420,
                            WriteSpeed = 320
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 1500,
                            CategoryId = 2,
                            Images = "silicon_power_armor_a60_1tb_sp010tbphda60s3k_images_117061555.jpg; silicon_power_armor_a60_1tb_sp010tbphda60s3k_images_117061620.jpg",
                            Make = "Silicon Power",
                            Name = "Armor A60 1.5 Tb",
                            Price = 350,
                            ReadSpeed = 470,
                            WriteSpeed = 540
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 750,
                            CategoryId = 2,
                            Images = "seagate_st2000nm0008_images_5655527064.jpg; seagate_st2000nm0008_images_5655528408.jpg; seagate_st2000nm0008_images_5655529608.jpg; seagate_st2000nm0008_images_5655532688.jpg",
                            Make = "Seagate",
                            Name = "Exos 7E2 512N",
                            Price = 800,
                            ReadSpeed = 340,
                            WriteSpeed = 560
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 1000,
                            CategoryId = 2,
                            Images = "apacer_ap1tbac630t_1_images_2913243303.jpg; apacer_ap1tbac630t_1_images_2913243975.jpg",
                            Make = "Apacer",
                            Name = "AC630 1TB",
                            Price = 950,
                            ReadSpeed = 410,
                            WriteSpeed = 400
                        });
                });

            modelBuilder.Entity("PC_shop.Models.Keyboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KeyboardList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            ConnectionType = "проводная",
                            Images = "razer_rz03_02741500_r3r1_images_17214343196.jpg; razer_rz03_02741500_r3r1_images_17214344281.jpg; razer_rz03_02741500_r3r1_images_17214347305.jpg",
                            Interface = "PS/2",
                            Make = "Razer",
                            Name = "Cynosa Lite",
                            Price = 300,
                            Type = "механическая"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            ConnectionType = "беспроводная",
                            Images = "msi_ds4100_gk_images_1881348038.jpg; msi_ds4100_gk_images_1881348506.jpg; msi_ds4100_gk_images_1881348584.jpg",
                            Interface = "USB",
                            Make = "MSI",
                            Name = "Interceptor DS4100",
                            Price = 600,
                            Type = "мембранная"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ConnectionType = "комбинированная",
                            Images = "real_el_8700_gaming_backlit_black_images_2265988904.jpg; real_el_8700_gaming_backlit_black_images_2265989056.jpg; real_el_8700_gaming_backlit_black_images_2265989264.jpg; real_el_8700_gaming_backlit_black_images_2265989528.jpg",
                            Interface = "Bluetooth",
                            Make = "Real-El",
                            Name = "8700 Backlit",
                            Price = 250,
                            Type = "механическая"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            ConnectionType = "проводная",
                            Images = "logitech_920_008019_images_20106386466.jpg; logitech_920_008019_images_20106386531.jpg; logitech_920_008019_images_20106386661.jpg",
                            Interface = "Bluetooth",
                            Make = "Logitech",
                            Name = "G910 Orion Spectrum",
                            Price = 350,
                            Type = "механическая"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            ConnectionType = "комбинированная",
                            Images = "logitech_920_009417_images_20106372101.jpg; logitech_920_009417_images_20106372231.jpg; logitech_920_009417_images_20106372361.jpg",
                            Interface = "USB",
                            Make = "Logitech",
                            Name = "MX Keys Wireless",
                            Price = 800,
                            Type = "мембранная"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ConnectionType = "комбинированная",
                            Images = "hyperx_hx_kb5me2_ru_images_10289690949.jpg; hyperx_hx_kb5me2_ru_images_10289691489.jpg; hyperx_hx_kb5me2_ru_images_10289692101.jpg; hyperx_hx_kb5me2_ru_images_10289692833.jpg",
                            Interface = "USB",
                            Make = "HyperX",
                            Name = "Alloy Core RGB Membrane",
                            Price = 950,
                            Type = "мембранная"
                        });
                });

            modelBuilder.Entity("PC_shop.Models.Monitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspectRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatrixType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MonitorList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AspectRatio = "16:9",
                            CategoryId = 4,
                            Frequency = 50,
                            Images = "samsung_s22f350f_images_17676384529.jpg; samsung_s22f350f_images_17676390007.jpg; samsung_s22f350f_images_17676449473.jpg",
                            Make = "Samsung",
                            MatrixType = "TN",
                            Name = "W2020",
                            Price = 700,
                            Resolution = "4650 x 2080",
                            Size = 22.0
                        },
                        new
                        {
                            Id = 2,
                            AspectRatio = "16:9",
                            CategoryId = 4,
                            Frequency = 150,
                            Images = "samsung_lc27rg50fqixci_images_18139211713.jpg; samsung_lc27rg50fqixci_images_18547319707.jpg; samsung_lc27rg50fqixci_images_17984381143.jpg",
                            Make = "Samsung",
                            MatrixType = "TN",
                            Name = "W2025",
                            Price = 300,
                            Resolution = "8500/1920",
                            Size = 28.0
                        },
                        new
                        {
                            Id = 3,
                            AspectRatio = "16:9",
                            CategoryId = 4,
                            Frequency = 100,
                            Images = "lenovo_61cakat1ua_images_11956157922.jpg; lenovo_61cakat1ua_images_11956158414.jpg; lenovo_61cakat1ua_images_11956159122.jpg",
                            Make = "LENOVO",
                            MatrixType = "IPS",
                            Name = "SN4420",
                            Price = 500,
                            Resolution = "2150/1920",
                            Size = 28.0
                        },
                        new
                        {
                            Id = 4,
                            AspectRatio = "16:10",
                            CategoryId = 4,
                            Frequency = 150,
                            Images = "hp_1fh47aa_images_2533452095.png; hp_1fh47aa_images_2533451839.png; hp_1fh47aa_images_2533452199.png",
                            Make = "HP",
                            MatrixType = "IPS",
                            Name = "TN2210",
                            Price = 1700,
                            Resolution = "2150/1920",
                            Size = 17.0
                        },
                        new
                        {
                            Id = 5,
                            AspectRatio = "16:9",
                            CategoryId = 4,
                            Frequency = 50,
                            Images = "copy_dell_210_atuz_5e1c7fb9d85ee_images_16305254652.jpg; copy_dell_210_atuz_5e1c7fb9d85ee_images_16305254743.jpg; copy_dell_210_atuz_5e1c7fb9d85ee_images_16305254841.jpg",
                            Make = "Dell",
                            MatrixType = "IPS",
                            Name = "G1223",
                            Price = 750,
                            Resolution = "1920/1080",
                            Size = 17.0
                        },
                        new
                        {
                            Id = 6,
                            AspectRatio = "16:10",
                            CategoryId = 4,
                            Frequency = 60,
                            Images = "dell_210_apwu_images_10482430088.jpg; dell_210_apwu_images_10482431150.jpg; dell_210_apwu_images_10482432434.jpg",
                            Make = "Dell",
                            MatrixType = "IPS",
                            Name = "Super S1",
                            Price = 700,
                            Resolution = "4550/1920",
                            Size = 15.4
                        });
                });

            modelBuilder.Entity("PC_shop.Models.MotherBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FormFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IntegratedVideoCard")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorySupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoExit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotherBoardList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            FormFactor = "ATX",
                            Images = "asus_tuf_z390_plus_gaming_wi_fi_images_7904477637.jpg; asus_tuf_z390_plus_gaming_wi_fi_images_7904478087.jpg; asus_tuf_z390_plus_gaming_wi_fi_images_7904478861.jpg",
                            IntegratedVideoCard = true,
                            Make = "Asus",
                            MemorySupport = "1866",
                            Name = "I-PRO20",
                            Price = 800,
                            Socket = "Socket 1567",
                            VideoExit = "DVI"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            FormFactor = "ATX",
                            Images = "218526139_images_18467982511.jpg",
                            IntegratedVideoCard = false,
                            Make = "Acer",
                            MemorySupport = "1333",
                            Name = "A99-50",
                            Price = 1700,
                            Socket = "Socket 1366",
                            VideoExit = "DVI"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            FormFactor = "MicroATX",
                            Images = "gigabyte_x399_aorus_pro_images_10802381841.jpg; gigabyte_x399_aorus_pro_images_10802960535.jpg; gigabyte_x399_aorus_pro_images_10802383041.jpg",
                            IntegratedVideoCard = true,
                            Make = "Gigabyte",
                            MemorySupport = "1333",
                            Name = "G990 MAX",
                            Price = 1100,
                            Socket = "Socket 1150",
                            VideoExit = "HDMI"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            FormFactor = "MicroATX",
                            Images = "191457449_images_17158409871.jpg",
                            IntegratedVideoCard = true,
                            Make = "HP",
                            MemorySupport = "1333",
                            Name = "H450i",
                            Price = 700,
                            Socket = "Socket 1150",
                            VideoExit = "HDMI"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            FormFactor = "EATX",
                            Images = "msi_b450_tomahawk_max_images_13269008218.jpg; msi_b450_tomahawk_max_images_13269009592.jpg; msi_b450_tomahawk_max_images_13269011554.jpg",
                            IntegratedVideoCard = false,
                            Make = "MSI",
                            MemorySupport = "1600",
                            Name = "Q88 Pro",
                            Price = 500,
                            Socket = "Socket 1155",
                            VideoExit = "DisplayPort"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            FormFactor = "MiniITX",
                            Images = "240799177_images_19528687813.jpg",
                            IntegratedVideoCard = false,
                            Make = "Intel",
                            MemorySupport = "1600",
                            Name = "I-350ZX",
                            Price = 300,
                            Socket = "Socket 1155",
                            VideoExit = "D-Sub"
                        });
                });

            modelBuilder.Entity("PC_shop.Models.Mouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MouseList");
                });

            modelBuilder.Entity("PC_shop.Models.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RamList");
                });

            modelBuilder.Entity("PC_shop.Models.Ssd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ReadSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WriteSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SsdList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 256,
                            CategoryId = 8,
                            Images = "copy_samsung_mz_76e250bw_5a6b2ed990cae_images_2697298199.jpg; samsung_mz_76e500bw_images_2697297479.jpg; samsung_mz_76e500bw_images_2697389775.jpg",
                            Make = "Samsung",
                            Name = "Samsung 256",
                            Price = 700,
                            ReadSpeed = 550,
                            WriteSpeed = 450
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 512,
                            CategoryId = 8,
                            Images = "kingston_kc_s44240_6f_images_10624101638.jpg; kingston_kc_s44240_6f_images_10624115984.jpg; kingston_kc_s44240_6f_images_10624109906.jpg",
                            Make = "Kingston",
                            Name = "Kingston 512",
                            Price = 300,
                            ReadSpeed = 1550,
                            WriteSpeed = 1450
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 960,
                            CategoryId = 8,
                            Images = "kingston_sa400s37_240g_images_1869202190.jpg;copy_kingston_sa400s37_480g_58b165d6202d1_images_1869202346.jpg;kingston_sa400s37_240g_images_1869202580.jpg",
                            Make = "Kingston",
                            Name = "Kingston 960",
                            Price = 850,
                            ReadSpeed = 500,
                            WriteSpeed = 400
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 960,
                            CategoryId = 8,
                            Images = "intel_ssdsc2kg480g801_images_12425177618.jpg;intel_ssdsc2kg480g801_images_12425176232.jpg;intel_ssdsc2kg480g801_images_12425174594.jpg",
                            Make = "Intel",
                            Name = "Intel 960",
                            Price = 1400,
                            ReadSpeed = 500,
                            WriteSpeed = 400
                        });
                });

            modelBuilder.Entity("PC_shop.Models.VideoCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Chip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemorySize")
                        .HasColumnType("int");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VideoCarsList");
                });
#pragma warning restore 612, 618
        }
    }
}
